<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <import resource="orderstates.xml"/>
    <!-- The first part: order manage server -->
    <bean id="orderManageServer" class="com.flying.oms.OrderManageServer">
        <constructor-arg type="java.lang.String" name="region" value="SZ"/>
        <constructor-arg type="short" name="type" value="3"/>
        <constructor-arg type="java.lang.String" name="name" value="OS-Walker"/>
        <property name="serverEngine" ref="orderServerEngine"/>
        <property name="scheduler" ref="scheduler"/>
    </bean>

    <bean id="orderServerEngine" class="com.flying.framework.messaging.engine.impl.ZMQUCServerEngine">
        <constructor-arg name="listenEndpoint" ref="omsListenEndpoint"/>
        <property name="msgEventListener" ref="omsMsgListener"/>
        <property name="workers" value="10"/>
    </bean>
    <bean id="scheduler" class="com.flying.util.schedule.Scheduler">
        <constructor-arg name="tasks">
            <list>
                <ref bean="orderReporter"/>
                <!--<ref bean="accountService"/>-->
            </list>
        </constructor-arg>
        <property name="delay" value="5000"/>
        <property name="initialDelay" value="3000"/>
    </bean>

    <bean id="omsListenEndpoint" class="com.flying.framework.messaging.endpoint.Endpoint"/>
    <bean id="omsMsgListener" class="com.flying.common.msg.handler.ServiceMsgListener">
        <constructor-arg>
            <!--  Q_PLACE_ORDER = 1; P_PLACE_ORDER = 2;-->
            <map>
                <entry key="1">
                    <bean class="com.flying.oms.msg.handler.OrderRequestHandler">
                        <constructor-arg name="service" ref="orderServerService"/>
                        <constructor-arg name="msgConverter" ref="orderMsgConverter"/>
                    </bean>
                </entry>
            </map>
        </constructor-arg>
        <constructor-arg name="msgConverter" ref="orderMsgConverter"/>
    </bean>
    <bean id="orderReporter" class="com.flying.monitor.service.client.ServerReporter">
        <property name="server" ref="orderManageServer"/>
        <property name="service" ref="bcMonitorClientService"/>
    </bean>

    <bean id="orderServerService" class="com.flying.oms.service.server.OrderServerService">
        <constructor-arg name="orderCache" ref="orderCache"/>
        <constructor-arg name="stateFactory" ref="stateFactory"/>
        <constructor-arg name="stateMachine" ref="orderStateMachine"/>
    </bean>
    <bean id="bcMonitorClientService" class="com.flying.monitor.service.client.BCMonitorClientService">
        <constructor-arg name="engine" ref="broadcastEngine"/>
        <constructor-arg name="msgConverter" ref="monitorMsgConverter"/>
    </bean>

    <bean id="broadcastEngine" class="com.flying.framework.messaging.engine.impl.BroadcastClientEngine" init-method="start" destroy-method="stop">
        <constructor-arg name="endpoints" ref="broadcastEndpoints"/>
    </bean>
    <bean id="broadcastEndpoints" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <bean class="com.flying.framework.messaging.endpoint.Endpoint">
                    <constructor-arg type="java.lang.String" name="protocol" value="udp"/>
                    <constructor-arg type="java.lang.String" name="address" value="255.255.255.255"/>
                    <constructor-arg type="int" name="port" value="51688"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="monitorMsgConverter" class="com.flying.monitor.msg.converter.MonitorMsgConverter"/>
    <bean id="orderMsgConverter" class="com.flying.oms.msg.converter.OrderMsgConverter"/>
    <bean id="accountMsgConverter" class="com.flying.ams.msg.converter.AccountMsgConverter"/>

    <bean id="orderCache" class="java.util.HashMap"/>
    <bean id="orderStateMachine" class="com.flying.framework.fsm.impl.DefaultStateMachine"/>

    <!--<bean id="accountService" class="com.flying.ams.service.client.AccountClientService" init-method="init" destroy-method="close">-->
        <!--<constructor-arg name="region" value="SZ"/>-->
        <!--<constructor-arg name="endpointFactory" ref="endpointFactory"/>-->
        <!--<constructor-arg name="poolConfig" ref="poolConfig"/>-->
        <!--<constructor-arg name="msgConverter" ref="accountMsgConverter"/>-->
        <!--&lt;!&ndash;<property name="accountCache" ref="accountCache"/>&ndash;&gt;-->
    <!--</bean>-->
    <bean id="endpointFactory" class="com.flying.monitor.service.client.MonitorEndpointFactory">
        <constructor-arg name="service" ref="bcMonitorClientService"/>
    </bean>
    <bean id="poolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
        <property name="minIdle" value="1"/>
    </bean>

    <bean id="accountService" class="com.flying.ams.service.server.AccountServerService">
        <constructor-arg name="loader" ref="accountDBLoader"/>
        <constructor-arg name="accountCache" ref="accountCache"/>
    </bean>
    <bean id="accountDBLoader" class="com.flying.ams.service.server.AccountDBLoader"/>
    <bean id="accountCache" class="java.util.HashMap"/>
</beans>