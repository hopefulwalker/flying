/**
 * This file is generated by code generation tools.
 * Generation time is @{now}
 */
package @{packageName};

import com.hazelcast.nio.serialization.ByteArraySerializer;
import uk.co.real_logic.sbe.codec.java.CodecUtil;
import uk.co.real_logic.sbe.codec.java.DirectBuffer;

import java.io.IOException;
import java.io.UnsupportedEncodingException;

public class @{boBASName} implements ByteArraySerializer<@{boName}> {
    @Override
    public int getTypeId() {
        return 1;
    }

    @Override
    public void destroy() {
    }

    @Override
    public byte[] write(@{boName} @{varBO}) throws IOException {
        DirectBuffer buffer = new DirectBuffer(new byte[@{boSBEName}.BLOCK_LENGTH]);
        @{boSBEName} @{varBOSBE} = new @{boSBEName}();
        @{varBOSBE}.wrapForEncode(buffer, 0).@{setBinaryStatement};
        return buffer.array();
    }

    @Override
    public @{boName} read(byte[] bytes) throws IOException {
        DirectBuffer buffer = new DirectBuffer(bytes);
        @{boSBEName} @{varBOSBE} = new @{boSBEName}();
        @{varBOSBE}.wrapForDecode(buffer, 0, @{boSBEName}.BLOCK_LENGTH);
        // Analyze the reply and build dto.
        @{boName} @{varBO} = new @{boName}();
        @{setBOStatement}
        return @{varBO};
    }

    @{sbeClassDefinition}
}